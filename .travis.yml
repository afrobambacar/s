notifications:
 email:
   recipients:
   - jclee.dev@gmail.com
   on_success: change
   on_failure: always
language: node_js
dist: trusty
node_js:
- '6'
branches:
  only:
  - master
  - codedeploy
  - dev
  - /^deploy-.*$/
  except:
  - dontrunme
  - test
cache:
  directories:
  - node_modules
before_install:
- npm -v
install:
- npm install
before_script:
- npm install -g gulp
- sudo apt-get install jq
script:
- npm test
after_success:
- gulp build
after_failure:
- exit 1
before_deploy:
# client only
- HASH_VAL=`cat dist/app/version.json | jq '.hash' | sed "s/\"//g"`
- mkdir -p dpl_cd_upload_client/${HASH_VAL}
- cp -R dist/app/client/ dpl_cd_upload_client/${HASH_VAL}/
# server only
- cd dist
- zip -r ${AWS_CODEDEPLOY_APPNAME} *
- cd ..
- mkdir -p dpl_cd_upload
- mv dist/${AWS_CODEDEPLOY_APPNAME}.zip dpl_cd_upload/${AWS_CODEDEPLOY_APPNAME}.zip
deploy:
- provider: s3
  region: $AWS_REGION
  bucket: $AWS_MEDIA_BUCKET
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  local_dir: dpl_cd_upload_client
  skip_cleanup: true
  on: &1
    branch: codedeploy
- provider: s3
  region: $AWS_REGION
  bucket: $AWS_SOURCE_BUCKET
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  local_dir: dpl_cd_upload
  skip_cleanup: true
  on: &1
    branch: codedeploy
- provider: codedeploy
  region: $AWS_REGION
  bucket: $AWS_SOURCE_BUCKET
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  key: ${AWS_CODEDEPLOY_APPNAME}.zip
  bundle_type: zip
  application: $AWS_CODEDEPLOY_APPNAME
  deployment_group: $AWS_DEPLOYMENT_GROUP
  wait-until-deployed: true
  on: *1
